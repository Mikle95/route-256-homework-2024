version: "6.0"

services:
  postgres:
    container_name: pg_db
    image: postgres:16
    restart: unless-stopped
    volumes:
      - ./postgresql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    command: ["postgres"]
    environment:
      POSTGRES_DB: loms_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 3s
      timeout: 5s
      retries: 5

  migrate:
    build: ./migrations/
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"


  cart:
    container_name: cart
    build: ./cart/
    ports:
      - "8082:8082" # HTTP

  loms:
    container_name: loms
    build: ./loms/
    depends_on:
      postgres:
        condition: service_healthy
      kafka0:
        condition: service_healthy
    ports:
      - "8081:8081" # HTTP
      - "50051:50051" # gRPC

# Kafka

  kafka-ui:
    depends_on:
      kafka0:
        condition: service_healthy
    container_name: route256-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka0:
    container_name: route256-kafka
    image: confluentinc/cp-kafka:7.7.1 #.arm64
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'SoMeCl4sTerId'
    healthcheck:
      test: kafka-topics --list --bootstrap-server kafka0:29092
      interval: 5s
      timeout: 10s
      retries: 3
#    command: "bash -c '/tmp/run_workaround.sh && /etc/confluent/docker/run'"

  kafka-init-topics:
    container_name: route256-init-topics
    image: confluentinc/cp-kafka:7.7.1 #.arm64
    depends_on:
      kafka0:
        condition: service_healthy
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092 1 30 && \
      kafka-topics --create --topic loms.order-events --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"
