syntax = "proto3";

package gitlab.ozon.dev.homework.loms.api.loms.v1;

option go_package = "gitlab.ozon.dev/1mikle1/homework/pkg/api/loms/v1;loms";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "loms";
    version: "1.0.0";
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "x-auth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "authorization";
      };
    }
  }
};


service LOMS {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "LOMS service GOHW-3"
    external_docs: {
      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/examples/internal/proto/examplepb/a_bit_of_everything.proto";
      description: "Find out more about grpc-gateway";
    }
  };


  rpc OrderCreate(order_info_message) returns (order_id) {
    option (google.api.http) = {
      post: "/order/create"
      body: "*"
    };
  }

  rpc OrderInfo(order_id) returns (order_info_response) {
    option (google.api.http) = {
      post: "/order/info"
      body: "*"
    };
  }

  rpc OrderPay(order_id) returns (empty_response) {
    option (google.api.http) = {
      post: "/order/pay"
      body: "*"
    };
  }

  rpc OrderCancel(order_id) returns (empty_response) {
    option (google.api.http) = {
      post: "/order/cancel"
      body: "*"
    };
  }

  rpc StocksInfo(stock_id_request) returns (stocks_info_response){
    option (google.api.http) = {
      post: "/stock/info"
      body: "*"
    };
  }
}

message empty_response {}

message order_info_message {
    int64 user = 1;
    repeated item items = 2;
}

message order_info_response {
    int64 user = 1;
    repeated item items = 2;
    string status = 3;
}

message item {
    uint32 sku = 1[(validate.rules).uint32 = {
      gt: 0
    }];
    uint32 count = 3 [(validate.rules).uint32 = {
      gt: 0
    }];
}

message stock_id_request {
    uint32 sku = 1 [(validate.rules).uint32 = {
      gt: 0
    }]; 
}

message order_id {
    int64 order_id = 1;
}

message stocks_info_response {
    uint64 count = 1 [(validate.rules).uint64 = {
      gt: 0
    }];
}
